package chapter6;

public class SortDemo {
	public static void main(String[] args) {
		final int N = 50000;
		int[] nums1 = new int[N];
		int[] nums2 = new int[N];
		for (int i = 0; i < nums1.length; i++) {
			nums1[i] = (int)(Math.random() * 100000);
		}
		long startTime = System.currentTimeMillis();
		//int[] nums = {45, 32, 56, 90, 21};
		for (int i = 0; i < nums1.length - 1; i++){	// 
			for (int j = 0; j < nums1.length - i - 1; i++){
				if(nums1[j] > nums1[j + 1]){
					int temp = nums1[j];			//冒泡排序
					nums1[j] = nums1[j + 1];
					nums1[j + 1] = temp;
				}
			}
		}										//
		long endTime = System.currentTimeMillis();
		System.out.println("冒泡排序共耗时：" + (endTime - startTime) + "毫秒");
//		System.out.println("排序后：");
//		for (int i = 0; i < nums.length; i++){
//			System.out.println(nums[i] + "\t");
//		}
//		System.out.println();
		 startTime = System.currentTimeMillis();
		for (int i = 0; i < nums2.length; i++){
			int min = nums2[i];
			int minIndex = i;
			for(int j = i + 1; j < nums2.length; i++){
				if(min > nums2[j]){
					min = nums2[j];
					minIndex = j;
				}
			}
			int temp = nums2[i];
			nums2[i] = nums2[minIndex];
			nums2[minIndex] = temp;
		}
										//
		 endTime = System.currentTimeMillis();
		System.out.println("选择排序共耗时：" + (endTime - startTime) + "毫秒");
		
				
	}

}
